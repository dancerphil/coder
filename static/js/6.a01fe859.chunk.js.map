{"version":3,"sources":["../node_modules/brace/mode/javascript.js","../node_modules/brace/snippets/javascript.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","identifierRe","JavaScriptHighlightRules","options","keywordMapper","createKeywordMapper","variable.language","keyword","storage.type","constant.language","support.function","constant.language.boolean","escapedRe","no_regex","comments","property","regex_character_class","function_arguments","qqstring","consumeLineEnd","qstring","noES6","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","push","jsx","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","include","jsxAttributes","currentState","splice","stateName","reference","call","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","WorkerClient","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","$quotes","\"","'","`","getNextLineIndent","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","createWorker","worker","__webpack_require__","attachToDocument","getDocument","on","results","setAnnotations","data","clearAnnotations","$id","e","t","n","snippetText","scope"],"mappings":"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","file":"static/js/6.a01fe859.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\xA1-\\uFFFF][a-zA-Z\\\\d\\\\$_\\xA1-\\uFFFF]*\";\n\n  var JavaScriptHighlightRules = function JavaScriptHighlightRules(options) {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\" + // Constructors\n      \"Namespace|QName|XML|XMLList|\" + // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" + // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n    \"u[0-9a-fA-F]{4}|\" + // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n    \"[0-2][0-7]{0,2}|\" + // oct\n    \"3[0-7][0-7]?|\" + // oct\n    \"[4-7][0-7]?|\" + //oct\n    \".)\";\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: [\"support.constant\"],\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"function_arguments\": [{\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"[, ]+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function onMatch(val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function onMatch(val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?\" + tagRegex + \"\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function onMatch(value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/javascript_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/worker/worker_client\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n  var CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$quotes = {\n      '\"': '\"',\n      \"'\": \"'\",\n      \"`\": \"`\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\" || state == \"no_regex\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\" || endState == \"no_regex\") {\n          return \"\";\n        }\n\n        var match = line.match(/^\\s*(\\/?)\\*/);\n\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n\n          indent += \"* \";\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], require(\"../worker/javascript\"), \"JavaScriptWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (results) {\n        session.setAnnotations(results.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/javascript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","ace.define(\"ace/snippets/javascript\", [\"require\", \"exports\", \"module\"], function (e, t, n) {\n  \"use strict\";\n\n  t.snippetText = \"# Prototype\\nsnippet proto\\n\\t${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {\\n\\t\\t${4:// body...}\\n\\t};\\n# Function\\nsnippet fun\\n\\tfunction ${1?:function_name}(${2:argument}) {\\n\\t\\t${3:// body...}\\n\\t}\\n# Anonymous Function\\nregex /((=)\\\\s*|(:)\\\\s*|(\\\\()|\\\\b)/f/(\\\\))?/\\nsnippet f\\n\\tfunction${M1?: ${1:functionName}}($2) {\\n\\t\\t${0:$TM_SELECTED_TEXT}\\n\\t}${M2?;}${M3?,}${M4?)}\\n# Immediate function\\ntrigger \\\\(?f\\\\(\\nendTrigger \\\\)?\\nsnippet f(\\n\\t(function(${1}) {\\n\\t\\t${0:${TM_SELECTED_TEXT:/* code */}}\\n\\t}(${1}));\\n# if\\nsnippet if\\n\\tif (${1:true}) {\\n\\t\\t${0}\\n\\t}\\n# if ... else\\nsnippet ife\\n\\tif (${1:true}) {\\n\\t\\t${2}\\n\\t} else {\\n\\t\\t${0}\\n\\t}\\n# tertiary conditional\\nsnippet ter\\n\\t${1:/* condition */} ? ${2:a} : ${3:b}\\n# switch\\nsnippet switch\\n\\tswitch (${1:expression}) {\\n\\t\\tcase '${3:case}':\\n\\t\\t\\t${4:// code}\\n\\t\\t\\tbreak;\\n\\t\\t${5}\\n\\t\\tdefault:\\n\\t\\t\\t${2:// code}\\n\\t}\\n# case\\nsnippet case\\n\\tcase '${1:case}':\\n\\t\\t${2:// code}\\n\\t\\tbreak;\\n\\t${3}\\n\\n# while (...) {...}\\nsnippet wh\\n\\twhile (${1:/* condition */}) {\\n\\t\\t${0:/* code */}\\n\\t}\\n# try\\nsnippet try\\n\\ttry {\\n\\t\\t${0:/* code */}\\n\\t} catch (e) {}\\n# do...while\\nsnippet do\\n\\tdo {\\n\\t\\t${2:/* code */}\\n\\t} while (${1:/* condition */});\\n# Object Method\\nsnippet :f\\nregex /([,{[])|^\\\\s*/:f/\\n\\t${1:method_name}: function(${2:attribute}) {\\n\\t\\t${0}\\n\\t}${3:,}\\n# setTimeout function\\nsnippet setTimeout\\nregex /\\\\b/st|timeout|setTimeo?u?t?/\\n\\tsetTimeout(function() {${3:$TM_SELECTED_TEXT}}, ${1:10});\\n# Get Elements\\nsnippet gett\\n\\tgetElementsBy${1:TagName}('${2}')${3}\\n# Get Element\\nsnippet get\\n\\tgetElementBy${1:Id}('${2}')${3}\\n# console.log (Firebug)\\nsnippet cl\\n\\tconsole.log(${1});\\n# return\\nsnippet ret\\n\\treturn ${1:result}\\n# for (property in object ) { ... }\\nsnippet fori\\n\\tfor (var ${1:prop} in ${2:Things}) {\\n\\t\\t${0:$2[$1]}\\n\\t}\\n# hasOwnProperty\\nsnippet has\\n\\thasOwnProperty(${1})\\n# docstring\\nsnippet /**\\n\\t/**\\n\\t * ${1:description}\\n\\t *\\n\\t */\\nsnippet @par\\nregex /^\\\\s*\\\\*\\\\s*/@(para?m?)?/\\n\\t@param {${1:type}} ${2:name} ${3:description}\\nsnippet @ret\\n\\t@return {${1:type}} ${2:description}\\n# JSON.parse\\nsnippet jsonp\\n\\tJSON.parse(${1:jstr});\\n# JSON.stringify\\nsnippet jsons\\n\\tJSON.stringify(${1:object});\\n# self-defining function\\nsnippet sdf\\n\\tvar ${1:function_name} = function(${2:argument}) {\\n\\t\\t${3:// initial code ...}\\n\\n\\t\\t$1 = function($2) {\\n\\t\\t\\t${4:// main code}\\n\\t\\t};\\n\\t}\\n# singleton\\nsnippet sing\\n\\tfunction ${1:Singleton} (${2:argument}) {\\n\\t\\t// the cached instance\\n\\t\\tvar instance;\\n\\n\\t\\t// rewrite the constructor\\n\\t\\t$1 = function $1($2) {\\n\\t\\t\\treturn instance;\\n\\t\\t};\\n\\t\\t\\n\\t\\t// carry over the prototype properties\\n\\t\\t$1.prototype = this;\\n\\n\\t\\t// the instance\\n\\t\\tinstance = new $1();\\n\\n\\t\\t// reset the constructor pointer\\n\\t\\tinstance.constructor = $1;\\n\\n\\t\\t${3:// code ...}\\n\\n\\t\\treturn instance;\\n\\t}\\n# class\\nsnippet class\\nregex /^\\\\s*/clas{0,2}/\\n\\tvar ${1:class} = function(${20}) {\\n\\t\\t$40$0\\n\\t};\\n\\t\\n\\t(function() {\\n\\t\\t${60:this.prop = \\\"\\\"}\\n\\t}).call(${1:class}.prototype);\\n\\t\\n\\texports.${1:class} = ${1:class};\\n# \\nsnippet for-\\n\\tfor (var ${1:i} = ${2:Things}.length; ${1:i}--; ) {\\n\\t\\t${0:${2:Things}[${1:i}];}\\n\\t}\\n# for (...) {...}\\nsnippet for\\n\\tfor (var ${1:i} = 0; $1 < ${2:Things}.length; $1++) {\\n\\t\\t${3:$2[$1]}$0\\n\\t}\\n# for (...) {...} (Improved Native For-Loop)\\nsnippet forr\\n\\tfor (var ${1:i} = ${2:Things}.length - 1; $1 >= 0; $1--) {\\n\\t\\t${3:$2[$1]}$0\\n\\t}\\n\\n\\n#modules\\nsnippet def\\n\\tdefine(function(require, exports, module) {\\n\\t\\\"use strict\\\";\\n\\tvar ${1/.*\\\\///} = require(\\\"${1}\\\");\\n\\t\\n\\t$TM_SELECTED_TEXT\\n\\t});\\nsnippet req\\nguard ^\\\\s*\\n\\tvar ${1/.*\\\\///} = require(\\\"${1}\\\");\\n\\t$0\\nsnippet requ\\nguard ^\\\\s*\\n\\tvar ${1/.*\\\\/(.)/\\\\u$1/} = require(\\\"${1}\\\").${1/.*\\\\/(.)/\\\\u$1/};\\n\\t$0\\n\", t.scope = \"javascript\";\n});"],"sourceRoot":""}